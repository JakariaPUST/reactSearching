{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,MAAM,SAAAC,GAAK,OACpB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCLbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACrB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCFhBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BHG,G,wDA/Bb,aACC,IAAD,8BACE,gBACKC,MAAO,CACVR,SAAS,GACTS,YAAY,IAJhB,E,gEAOoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,+BAEjC,IAAD,SAC4BE,KAAKR,MAA/BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACZQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,eAAiBxB,EAAQG,MAAMqB,cAAcC,SAASX,EAAYU,kBACtK,OACE,sBAAK3B,UAAU,MAAf,UACA,oBAAIA,UAAU,SAAd,+BACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAc,SAAAiB,GACZ,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,QAAQ,kBAAMC,QAAQC,IAAI,EAAKjB,aAIxE,cAAC,EAAD,CAAUR,SAAUiB,W,GA1BRS,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9254a28e.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../card/card.style.css'\r\n\r\nexport const Card =props => (\r\n    <div className=\"card-container\">\r\n        <img \r\n        alt=\"monster\" \r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props =>(\r\n    <div className=\"card-list\">\r\n    {props.monsters.map(monster => (\r\n          <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n      </div>);","import React from 'react';\r\n\r\nimport '../search-box/search-box.style.css';\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange} \r\n    />\r\n);\r\n","import { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport { SearchBox} from './components/search-box/search-box.component.jsx';\n\nimport './App.css';\n\nclass App extends Component{\n  constructor()\n  {\n    super();\n    this.state ={\n      monsters:[],\n      searchField:''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()) | monster.email.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n      <div className=\"App\">\n      <h1 className=\"headst\"> Monster Rolodex </h1>\n      <SearchBox \n        placeholder='Search Monster'\n        handleChange={e =>{\n          this.setState({searchField: e.target.value },() => console.log(this.state));\n        }}\n\n      />\n      <CardList monsters={filteredMonsters} />     \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}